无状态对象 不管是单例还是多例 都是线程安全的

单例可以节省创建对象和gc的不断开销

无状态对象：
dto,vo 只作为实体
service controller dao

用户栈 是线程私有的 不存在线程安全问题

spring没有多bean对任何的线程安全措施：
没有在每个bean中设计 实例变量 和 类变量
无状态的线程设计 是的spring的bean不会存在线程安全问题。

---------------------------------------------------------
HashMap 和 ConcurrentHashMap

数据结构： 最常见的是 数组 和 指针(引用)

HashMap: 是一个数据结构 其中数组的每一项 又是一个链表
         初始容量和加载因子  两个参数  会影响到HashMap的性能。
         初始容量：默认是16
         加载因子：默认值是0.75 (增加容量之前 多满的一个尺度)

HashMap的寻址方式：
     key进行hash取模 0,1,2,3... 来进行查找
扩容的时候 会创建原来2倍的容量的数组 此时会将内容重新插入到新的数组中 这个时候会出现多线程的死循环。


ConcurrentHashMap：数组和链表
    segment 分段锁 java7
    java8 没有使用分段锁机制，红黑树链表。提高并发性。


 区别：
 1，HashMap线程不安全, ConcurrentHashMap线程安全
 2, HashMap需要key和value为空 而ConcurrentHashMap不允许

 ------------------------------------------------------
